(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{783:function(_,t,v){"use strict";v.r(t);var e=v(1),r=Object(e.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"数据库范式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库范式"}},[_._v("#")]),_._v(" 数据库范式")]),_._v(" "),v("p",[_._v("前言："),v("code",[_._v("p")]),_._v("项目，"),v("code",[_._v("e")]),_._v("员工，"),v("code",[_._v("s")]),_._v("薪水")]),_._v(" "),v("h2",{attrs:{id:"零、问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#零、问题"}},[_._v("#")]),_._v(" 零、问题")]),_._v(" "),v("p",[_._v("数据应该尽可能少地冗余，这意味着重复数据应该减少到最少。比如说，一个部门雇员的电话不应该被存储在不同的表中， 因为这里的电话号码是雇员的一个属性。如果存在过多的冗余数据，这就意味着要占用了更多的物理空间，同时也对数据的维护和一致性检查带来了问题，当这个员工的电话号码变化时，冗余数据会导致对多个表的更新动作，如果有一个表不幸被忽略了，那么就可能导致数据的不一致性。")]),_._v(" "),v("p",[v("strong",[_._v("表 1-1")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/OMGZui/noteBook/master/public/img/nf/1nf.jpg",alt:"1nf"}})]),_._v(" "),v("p",[_._v("我们可以看到，这张表一共有六个字段，分析每个字段都有重复的值出现，也就是说，存在数据冗余问题。这将潜在地造成数据操作（比如删除、更新等操作）时的异常情况，因此，需要进行规范化。")]),_._v(" "),v("h2",{attrs:{id:"一、第一范式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、第一范式"}},[_._v("#")]),_._v(" 一、第一范式")]),_._v(" "),v("p",[_._v("参照范式的定义，考察上表，我们发现，这张表已经满足了第一范式的要求。")]),_._v(" "),v("p",[_._v("1、因为这张表中字段都是单一属性的，不可再分")]),_._v(" "),v("p",[_._v("2、而且每一行的记录都是没有重复的")]),_._v(" "),v("p",[_._v("3、存在主属性，而且所有的属性都是依赖于主属性")]),_._v(" "),v("p",[_._v("4、所有的主属性都已经定义")]),_._v(" "),v("p",[_._v("可以看到，属性对"),v("code",[_._v("<p_id, e_id>")]),_._v("是主键，其他所有的属性都依赖于该主键。")]),_._v(" "),v("h2",{attrs:{id:"二、第二范式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、第二范式"}},[_._v("#")]),_._v(" 二、第二范式")]),_._v(" "),v("p",[_._v("根据第二范式的定义，转化为二范式就是消除部分依赖。")]),_._v(" "),v("p",[_._v("1、数据冗余：每一个字段都有值重复")]),_._v(" "),v("p",[_._v("2、更新异常：比如对"),v("code",[_._v("p_name")]),_._v('值"TPMS"做了修改，那么就要一次更新该字段的多个值')]),_._v(" "),v("p",[_._v("3、插入异常：如果新建了一个"),v("code",[_._v("p")]),_._v('，名字为"TPT", 但是还没有'),v("code",[_._v("e")]),_._v("加入，那么"),v("code",[_._v("e_id")]),_._v("将会空缺，而该字段是主键的一部分，因此将无法插入记录")]),_._v(" "),v("p",[_._v("4、删除异常：如果一个员工 200003, Kevin 离职了，要将该员工的记录从表中删除，而此时相关的"),v("code",[_._v("s_category")]),_._v(" C 也将丢失, 因为再没有别的行纪录下 ``s_category`C的信息")]),_._v(" "),v("p",[_._v("因此，我们需要将存在部分依赖关系的主属性和非主属性从满足第一范式的表中分离出来，形成一张新的表，而新表和旧表之间是一对多的关系。由此，我们得到：")]),_._v(" "),v("p",[v("strong",[_._v("表 1-2")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/OMGZui/noteBook/master/public/img/nf/2nf_p.jpg",alt:"2nf_p"}})]),_._v(" "),v("p",[v("strong",[_._v("表 1-3")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/OMGZui/noteBook/master/public/img/nf/2nf_e.jpg",alt:"2nf_e"}})]),_._v(" "),v("p",[v("strong",[_._v("表 1-4")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/OMGZui/noteBook/master/public/img/nf/2nf_p_e.jpg",alt:"2nf_p_e"}})]),_._v(" "),v("p",[_._v("这时候我们仔细观察一下表1-2, 1-3, 1-4, 我们发现插入异常已经不存在了，当我们引入一个新的"),v("code",[_._v("p")]),_._v('"TPT" 的时候，我们只需要向表1-2 中插入一条数据就可以了， 当有新人加入'),v("code",[_._v("p")]),_._v('"TPT"  的时候，我们需要向表1-3, 1-4 中各插入一条数据就可以了。虽然我们解决了一个大问题，但是仔细观察我们还是发现有问题存在。')]),_._v(" "),v("h2",{attrs:{id:"三、第三范式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、第三范式"}},[_._v("#")]),_._v(" 三、第三范式")]),_._v(" "),v("p",[_._v("考察表前面生成的三张表，我们发现，表1-3存在传递依赖关系。而这是不满足三范式的规则的，存在以下的不足：")]),_._v(" "),v("p",[_._v("1、数据冗余："),v("code",[_._v("s_category")]),_._v("和"),v("code",[_._v("s_package")]),_._v("的值有重复")]),_._v(" "),v("p",[_._v("2、更新异常：有重复的冗余信息，修改时需要同时修改多条记录，否则会出现数据不一致的情况")]),_._v(" "),v("p",[_._v("3、删除异常：同样的，如果员工 200003 Kevin 离开了公司，会直接导致 "),v("code",[_._v("s_category")]),_._v(" C 的信息的丢失")]),_._v(" "),v("p",[_._v("因此，我们需要继续进行规范化的过程，把表1-3拆开，我们得到：")]),_._v(" "),v("p",[v("strong",[_._v("表 1-5")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/OMGZui/noteBook/master/public/img/nf/3nf_e.jpg",alt:"3nf_e"}})]),_._v(" "),v("p",[v("strong",[_._v("表 1-6")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/OMGZui/noteBook/master/public/img/nf/3nf_s.jpg",alt:"3nf_s"}})]),_._v(" "),v("p",[_._v("这时候如果 200003 Kevin 离开公司，我们只需要从表 1-5 中删除他就可以了， 存在于表1-6中的 "),v("code",[_._v("s_category")]),_._v(" C 信息并不会丢失。但是我们要注意到除了表 1-5 中存在 Kevin 的信息之外， 表1-4中也存在 Kevin 的信息， 这很容易理解， 因为 Kevin 参与了项目 100001， TPMS， 所以当然也要从中删除。")]),_._v(" "),v("p",[_._v("至此，我们将表1-1经过规范化步骤，得到四张表，满足了三范式的约束要求，数据冗余、更新异常、插入异常和删除异常。")]),_._v(" "),v("p",[_._v("在三范式之上，还存在着更为严格约束的BC范式和四范式，但是这两种形式在商业应用中很少用到，在绝大多数情况下，三范式已经满足了数据库表规范化的要求，有效地解决了数据冗余和维护操作的异常问题。")]),_._v(" "),v("h2",{attrs:{id:"四、结束语"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、结束语"}},[_._v("#")]),_._v(" 四、结束语")]),_._v(" "),v("p",[_._v("在本文描述的过程中，我们通过结合实例的方法，通俗地演绎了数据表规范化的过程，并展示了在此过程中数据冗余、数据库操作异常等问题是如何得到解决的。")]),_._v(" "),v("p",[_._v("在具体的工程应用中，运用数据库规范化的方法来设计数据库表，将是具有现实意义的。")]),_._v(" "),v("h2",{attrs:{id:"五、参考资料"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、参考资料"}},[_._v("#")]),_._v(" 五、参考资料")]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/data/library/techarticles/dm-0605jiangt/index.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("规范化－数据库设计原则"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);