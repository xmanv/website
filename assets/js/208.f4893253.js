(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{781:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git简明教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git简明教程"}},[t._v("#")]),t._v(" Git简明教程")]),t._v(" "),a("h2",{attrs:{id:"一、安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、安装"}},[t._v("#")]),t._v(" 一、安装")]),t._v(" "),a("h3",{attrs:{id:"_1、直接安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、直接安装"}},[t._v("#")]),t._v(" 1、直接安装")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://book.git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_2、源码安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、源码安装"}},[t._v("#")]),t._v(" 2、源码安装")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载源码包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://www.kernel.org/pub/software/scm/git/git-2.9.5.tar.gz\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解压")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" zxvf git-2.9.5\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 依赖包")]),t._v("\nyum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" curl-devel expat-devel gettext-devel openssl-devel zlib-devel asciidoc xmlto docbook2x perl-devel\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入开始编译")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" git-2.9.5\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 简易安装")]),t._v("\n./configure --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/git "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# doc一起安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" configure "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ./configure --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/git "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" all "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3、配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、配置"}},[t._v("#")]),t._v(" 3、配置")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"omgzui"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"862275679@qq.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .ssh")]),t._v("\nssh-keygen -t rsa -C "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"862275679@qq.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用公钥关联远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .ssh/id_rsa.pub\n复制填入对应的git仓库\n")])])]),a("h2",{attrs:{id:"二、初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、初始化"}},[t._v("#")]),t._v(" 二、初始化")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 克隆仓库")]),t._v("\n本地克隆\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone /Users/shengj/mac/php/noteBook\n远程克隆\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/OMGZui/noteBook\n\n")])])]),a("h2",{attrs:{id:"三、工作流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、工作流"}},[t._v("#")]),t._v(" 三、工作流")]),t._v(" "),a("p",[t._v("你的本地仓库由 git 维护的三棵“树”组成。")]),t._v(" "),a("ul",[a("li",[t._v("第一个是你的 "),a("code",[t._v("工作目录")]),t._v("，它持有实际文件")]),t._v(" "),a("li",[t._v("第二个是 "),a("code",[t._v("暂存区（Index")]),t._v("），它像个缓存区域，临时保存你的改动")]),t._v(" "),a("li",[t._v("最后是 "),a("code",[t._v("HEAD")]),t._v("，它指向你最后一次提交的结果")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://omgzui.oss-cn-hangzhou.aliyuncs.com/github/git-flow.jpg",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"四、添加和提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、添加和提交"}},[t._v("#")]),t._v(" 四、添加和提交")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("你可以提出更改（把它们添加到暂存区）\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 某个文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" git.md\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全部文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n或者\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" *\n\n实际提交改动\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'代码提交信息'")]),t._v("\n你的改动已经提交到了 HEAD，但是还没到你的远端仓库\n")])])]),a("h2",{attrs:{id:"五、推送改动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、推送改动"}},[t._v("#")]),t._v(" 五、推送改动")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n提交到远端仓库\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n\n如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加远程服务器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/OMGZui/noteBook\n")])])]),a("h2",{attrs:{id:"六、分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、分支"}},[t._v("#")]),t._v(" 六、分支")]),t._v(" "),a("p",[t._v("分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://omgzui.oss-cn-hangzhou.aliyuncs.com/github/git-branch.jpg",alt:""}})]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个叫做“bug_fix”的分支，并切换过去")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b bug_fix\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换回主分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再把新建的分支删掉")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d bug_fix\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin bug_fix\n")])])]),a("h2",{attrs:{id:"七、更新与合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、更新与合并"}},[t._v("#")]),t._v(" 七、更新与合并")]),t._v(" "),a("p",[t._v("在master合并bug_fix分支")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要更新你的本地仓库至最新改动，执行：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要合并其他分支到你的当前分支（例如 master），执行：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge bug_fix\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现冲突（conflicts）。 这时候就需要你修改这些文件来手动合并这些冲突（conflicts）。改完之后，你需要执行如下命令以将它们标记为合并成功：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在合并改动之前，你可以使用如下命令预览差异：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" bug_fix master\n")])])]),a("h2",{attrs:{id:"八、标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、标签"}},[t._v("#")]),t._v(" 八、标签")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为软件发布创建标签是推荐的。这个概念早已存在，在 SVN 中也有。你可以执行如下命令创建一个叫做 v1.0.0 的标签：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v1.0.0 1b2e1d63ff\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符。可以使用下列命令获取提交 ID：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你也可以使用少一点的提交 ID 前几位，只要它的指向具有唯一性。")]),t._v("\n")])])]),a("h2",{attrs:{id:"九、日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、日志"}},[t._v("#")]),t._v(" 九、日志")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果你想了解本地仓库的历史记录，最简单的命令就是使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你可以添加一些参数来修改他的输出，从而得到自己想要的结果。 只看某一个人的提交记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --author"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("shengj\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一个压缩后的每一条提交记录只占一行的输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者你想通过 ASCII 艺术的树形结构来展示所有的分支, 每个分支都标示了他的名字和标签: ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --graph --oneline --decorate --all\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 看看哪些文件改变了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --name-status\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这些只是你可以使用的参数中很小的一部分。更多的信息，参考")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --help\n")])])]),a("h2",{attrs:{id:"十、版本回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十、版本回退"}},[t._v("#")]),t._v(" 十、版本回退")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -- "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到暂存区的改动以及新文件都不会受到影响。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard origin/master\n")])])]),a("h2",{attrs:{id:"十一、使用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十一、使用技巧"}},[t._v("#")]),t._v(" 十一、使用技巧")]),t._v(" "),a("ul",[a("li",[t._v("使用图形界面大大提升效率，Mac推荐"),a("code",[t._v("SourceTree")])]),t._v(" "),a("li",[t._v("冲突解决")])]),t._v(" "),a("blockquote",[a("p",[t._v("经常在合并分支时出现冲突，解决冲突还是很容易的，时刻 "),a("code",[t._v("git pull")]),t._v(" 是个好习惯，有工具的话，会自动提示的，提示冲突也别怕，\n可以先"),a("code",[t._v("git stash")]),t._v("缓存起来，然后 "),a("code",[t._v("git pull")]),t._v("，这时再 "),a("code",[t._v("git stash pop")]),t._v("把缓存内容拿出来，打开冲突文件，进行修改即可。")])]),t._v(" "),a("ul",[a("li",[t._v("反悔")])]),t._v(" "),a("blockquote",[a("p",[t._v("有这样的需求，我们上线了最新版本，但是功能还不成熟，给客户演示时需要暂时成熟的版本，此时我们可以有两种做法：")]),t._v(" "),a("p",[t._v("1、切回到成熟版本，合并到master分支上")]),t._v(" "),a("p",[t._v("2、备份master，查看log，回退到成熟提交点。")])]),t._v(" "),a("ul",[a("li",[t._v("简单部署脚本"),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/env bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切分支到master")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'切分支到master'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并dev分支内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'合并dev分支内容'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge dev\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交代码'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交至本地暂存区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交至本地暂存区'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上传至远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'上传至远程仓库'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 完成后切回dev分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'完成后切回dev分支'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"十二、参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十二、参考资料"}},[t._v("#")]),t._v(" 十二、参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://rogerdudler.github.io/git-guide/index.zh.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git - 简明指南"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);